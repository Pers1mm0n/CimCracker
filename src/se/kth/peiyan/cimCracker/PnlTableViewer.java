package se.kth.peiyan.cimCracker;

import java.awt.print.PrinterException;
import java.util.Arrays;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 * Panel displaying the database table
 * 
 * @author peiyanli
 * @version 0.1, May 16, 2015
 */
public class PnlTableViewer extends javax.swing.JPanel {
    private StringBuilder columnsBuilder = new StringBuilder(10);
    private TableModel tableModel;
    private DataAnalyzer analyzer;
    /**
     * Creates new form TableViewerPanel
     */
    public PnlTableViewer(JFrame parentFrame, DataAnalyzer analyzer)
    {
        this.parentFrame = (MainFrame) parentFrame;
        this.tables = analyzer.getTable();
        this.analyzer = analyzer;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        javax.swing.JLabel lblTable = new javax.swing.JLabel();
        cmbTable = new javax.swing.JComboBox();
        javax.swing.JSeparator jSeparator1 = new javax.swing.JSeparator();
        javax.swing.JScrollPane jScrollPane2 = new javax.swing.JScrollPane();
        tblViewer = new javax.swing.JTable();
        javax.swing.JLabel lblPrint = new javax.swing.JLabel();
        btnColumn = new javax.swing.JButton();

        lblTable.setText("Table");

        cmbTable.setModel(new javax.swing.DefaultComboBoxModel(tables));
        cmbTable.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                cmbTableItemStateChanged(evt);
            }
        });

        tblViewer.setModel(new DatabaseTableModel(analyzer, (String) cmbTable.getSelectedItem()));
        jScrollPane2.setViewportView(tblViewer);

        lblPrint.setText("<html><font color=\"#000099\">print the current table</font></html>");
        lblPrint.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblPrint.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                lblPrintMouseClicked(evt);
            }
        });

        btnColumn.setText("Select Columns");
        btnColumn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnColumnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(lblTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnColumn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblPrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTable)
                    .addComponent(cmbTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnColumn))
                .addGap(1, 1, 1)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbTableItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTableItemStateChanged
        tblViewer.setModel(new DatabaseTableModel(analyzer, (String) cmbTable.getSelectedItem()));
        parentFrame.setPocessLabel("Table changed");
    }//GEN-LAST:event_cmbTableItemStateChanged

    private void lblPrintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPrintMouseClicked
        try
        {
            tblViewer.print();
        } catch (PrinterException ex)
        {
            Logger.getLogger(PnlTableViewer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblPrintMouseClicked

    private void btnColumnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnColumnActionPerformed
    {//GEN-HEADEREND:event_btnColumnActionPerformed
        DlgDatabaseColumnChooser columnChooser = new DlgDatabaseColumnChooser(parentFrame, true, columns);
        columnChooser.setVisible(true);
        if (columnChooser.getReturnStatus() == DlgDatabaseColumnChooser.RET_OK && columnChooser.getSelectedColumns().length != 0)
        {
            int[] selectedColumns = columnChooser.getSelectedColumns();
            TableModel tableModel = new DatabaseTableModel(analyzer, (String) cmbTable.getSelectedItem(), selectedColumns);
            tblViewer.setModel(tableModel);
        }
    }//GEN-LAST:event_btnColumnActionPerformed

    /**
     * update table
     */
    public void updateTable()
    {
        TableModel tableModel = new DatabaseTableModel(analyzer, analyzer.getTable()[0]);
        tblViewer.setModel(tableModel);
    }
    
    /**
     * Table Model class for preparing data shown in the JTable
     */
    private class DatabaseTableModel extends DefaultTableModel
    {
        private Vector data;
        private DataAnalyzer analyzer;
        
        /**
         * Constructor to initial this tableModel
         * 
         * @param analyzer a reference to DataAnalyzer
         * @param table the table chosen to shown in the JTable
         */
        public DatabaseTableModel(DataAnalyzer analyzer, String table)
        {
            this.analyzer = analyzer;
            initialVectors(table);
            
            setDataVector(data, columns);
        }
        
        /**
         * Constructor to initial this tableModel
         * 
         * @param analyzer a reference to DataAnalyzer
         * @param table the table chosen to shown in the JTable
         * @param selectedColumns restrained column in the JTable
         */
        public DatabaseTableModel(DataAnalyzer analyzer, String table, int[] selectedColumns)
        {
            this.analyzer = analyzer;
            initialVectors(table);
            
            Vector newData = new Vector();
            Vector newColumns = new Vector();
            for (int index : selectedColumns)
            {
                newColumns.add(columns.get(index));
            }
            
            for (int i = 0; i < data.size(); i++)
            {
                Vector row = new Vector();
                for (int index : selectedColumns)
                {
                    row.add(((Vector) data.get(i)).get(index));
                }
                newData.add(row);
            }
            setDataVector(newData, newColumns);
        }
        
        private void initialVectors(String table)
        {
            columns= null;
            columns = analyzer.getColumn(table);
            data = analyzer.getData(table);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnColumn;
    private javax.swing.JComboBox cmbTable;
    private javax.swing.JTable tblViewer;
    // End of variables declaration//GEN-END:variables
    private String[] tables;
    private se.kth.peiyan.cimCracker.MainFrame parentFrame;
    private Vector columns;
}
